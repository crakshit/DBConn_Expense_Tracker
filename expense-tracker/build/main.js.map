{"version":3,"sources":["./src/app/transaction-service.service.ts","./src/app/category-details-page/category-details-page.component.ts","./src/app/category-details-page/category-details-page.component.html","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/framework/framework.component.ts","./src/app/framework/framework.component.html","./src/environments/environment.ts","./src/app/home-list/home-list.component.ts","./src/app/home-list/home-list.component.html","./src/app/category-service.service.ts","./src/app/category-list/category-list.component.ts","./src/app/category-list/category-list.component.html","./src/app/details-page/details-page.component.ts","./src/app/details-page/details-page.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Transaction } from './transaction';\nimport { HttpClient, HttpResponse } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionServiceService {\n\n  private transactionsUrl = 'http://localhost:3000/api/transaction';\n\n  constructor(private http: HttpClient) { }\n\n  //Get All\n  getTransactions(): Promise<void | Transaction[]> {\n    return this.http.get(this.transactionsUrl)\n      .toPromise()\n      .then(response => response as Transaction[])\n      .catch(this.handleError);\n  }\n\n  //Get Balance\n  getBalanceAmount(): Promise<void | Number>{\n    return this.http.get('http://localhost:3000/api/getBalance')\n    .toPromise()\n    .then(response => response as Number)\n    .catch(this.handleError);\n  }\n\n  //Get Single\n  getSingleTransaction(transactionId: string): Promise<void | Transaction> {\n    return this.http.get(this.transactionsUrl + '/' + transactionId)\n      .toPromise()\n      .then(response => response as Transaction)\n      .catch(this.handleError);\n  }\n\n  //Create\n  createTransaction(newTransaction: Transaction): Promise<void | Transaction> {\n    return this.http.post(this.transactionsUrl, newTransaction)\n      .toPromise()\n      .then(response => response as Transaction)\n      .catch(this.handleError);\n  }\n\n  //Delete\n  deleteTransaction(transactionId: String): Promise<void | String> {\n    return this.http.delete(this.transactionsUrl + '/' + transactionId)\n      .toPromise()\n      .then(response => response as String)\n      .catch(this.handleError);\n  }\n\n  updateTransaction(putTransaction: Transaction): Promise<void | Transaction> {\n    var putUrl = this.transactionsUrl + '/' + putTransaction._id;\n    return this.http.put(putUrl, putTransaction)\n      .toPromise()\n      .then(response => response as Transaction)\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any) {\n    console.log(error);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { from } from 'rxjs';\nimport { Category } from '../category';\nimport { CategoryServiceService } from '../category-service.service';\nimport { switchMap } from 'rxjs/operators';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-category-details-page',\n  templateUrl: './category-details-page.component.html',\n  styleUrls: ['./category-details-page.component.css'],\n  providers: [CategoryServiceService]\n})\nexport class CategoryDetailsPageComponent {\n\n  @Input()\n  category: Category;\n\n  @Input()\n  createHandler: Function;\n  @Input()\n  updateHandler: Function;\n  @Input()\n  deleteHandler: Function;\n\n  constructor(private categorySerive: CategoryServiceService, private route: ActivatedRoute) { }\n\n  \n  createCategory(category: Category) {\n    this.categorySerive.createCategory(category).then((newCategory: Category) => {\n      this.createHandler(newCategory);\n    });\n  }\n\n  updateCategory(category: Category): void {\n    this.categorySerive.updateCategory(category).then((updatedCategory: Category) => {\n      this.updateHandler(updatedCategory);\n    });\n  }\n\n  deleteCategory(categoryId: String): void {\n    this.categorySerive.deleteCategory(categoryId).then((deletedCategoryId: String) => {\n      this.deleteHandler(deletedCategoryId);\n    });\n  }\n\n}\n","<div class=\"container\">\n<div *ngIf=\"category\" class=\"col-md-12\">\n    <h5 *ngIf=\"category._id\">Category Details</h5>\n    <h5 *ngIf=\"!category._id\">Add New category</h5>\n</div>\n  \n  <form *ngIf=\"category\">\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-12\">\n        <label for=\"flacategoryvours\">Category</label>\n        <input [(ngModel)]=\"categorycategory\" class=\"form-control\" id=\"category\" name=\"category\" required=\"required\">\n      </div>\n    </div>\n\n    <button class=\"btn btn-primary\" *ngIf=\"!category._id\" (click)=\"createCategory(category)\">Create</button>\n    <button class=\"btn btn-info\" *ngIf=\"category._id\" (click)=\"updateCategory(category)\">Update</button>\n    <button class=\"btn btn-danger\" *ngIf=\"category._id\" (click)=\"deleteCategory(category._id)\">Delete</button>\n  \n    <!-- <button type=\"submit\" class=\"btn btn-primary\">Create</button> -->\n  </form>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"col-md-12\" id=\"spacer\" style=\"margin: 55px 0;\">\n</div>\n<header class=\"bg-primary text-white\">\n    <div class=\"container text-center\">\n      <h1>This is About Page</h1>\n      <p class=\"lead\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Incidunt tempora provident voluptates expedita optio minima atque quaerat, fugit placeat, obcaecati mollitia sequi architecto ut suscipit esse, alias asperiores dolore necessitatibus?</p>\n    </div>\n  </header>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-framework',\n  templateUrl: './framework.component.html',\n  styleUrls: ['./framework.component.css']\n})\nexport class FrameworkComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- <p>framework works!</p>\n<span>\n    <a routerLink=\"\">Home</a>\n    <a routerLink=\"about\">About</a>\n    <a routerLink=\"create\">Create</a>\n</span> -->\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\" id=\"mainNav\">\n    <div class=\"container\">\n        <a class=\"navbar-brand js-scroll-trigger\" routerLink=\"\">Budget App</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n            <ul class=\"navbar-nav ml-auto\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link js-scroll-trigger\" routerLink=\"\">Home</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link js-scroll-trigger\" routerLink=\"about\">About</a>\n                </li>\n                <!-- <li class=\"nav-item\">\n                    <a class=\"nav-link js-scroll-trigger\" routerLink=\"create\">Create</a>\n                </li> -->\n            </ul>\n        </div>\n    </div>\n</nav>\n<router-outlet></router-outlet>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { from } from 'rxjs';\nimport { Transaction } from '../transaction';\nimport { TransactionServiceService } from '../transaction-service.service';\n\n@Component({\n  selector: 'app-home-list',\n  templateUrl: './home-list.component.html',\n  styleUrls: ['./home-list.component.css'],\n  providers: [TransactionServiceService]\n})\nexport class HomeListComponent implements OnInit {\n\n  transactions: Transaction[]\n  selectedTransaction: Transaction\n  balanceAmount: Number\n\n  constructor(private transactionService: TransactionServiceService) { }\n\n  ngOnInit(): void {\n    this.transactionService\n      .getTransactions()\n      .then((transactions: Transaction[]) => {\n        this.transactions = transactions.map(transaction => {\n          return transaction;\n        });\n      });\n      this.balanceAmount = 0.00;\n\n      this.transactionService\n      .getBalanceAmount()\n      .then((balanceAmount: Number) => {\n        this.balanceAmount = balanceAmount;\n      });\n  }\n\n  private getIndexofTransaction = (transactionId: String) => {\n    return this.transactions.findIndex((transaction) => {\n      return transaction._id === transactionId;\n    });\n  }\n\n  selectTransaction(transaction: Transaction) {\n    this.selectedTransaction = transaction\n  }\n\n  createNewTransaction() {\n    var transaction: Transaction = {\n      _id: '',\n      type: '',\n      category: '',\n      description: '',\n      date: '',\n      amount: 0,\n    };\n\n    this.selectTransaction(transaction);\n\n  }\n\n  deleteTransaction = (transactionId: String) => {\n    var idx = this.getIndexofTransaction(transactionId);\n    if (idx !== -1) {\n      this.transactions.splice(idx, 1);\n      this.selectTransaction(null);\n    }\n\n    this.transactionService\n      .getBalanceAmount()\n      .then((balanceAmount: Number) => {\n        this.balanceAmount = balanceAmount;\n      });\n\n    return this.transactions;\n  }\n\n  addTransaction = (transaction: Transaction) => {\n\n    if (transaction.type != '' && transaction.amount != null) {\n      this.transactions.push(transaction);\n    }\n    this.selectTransaction(transaction);\n\n    this.transactionService\n      .getBalanceAmount()\n      .then((balanceAmount: Number) => {\n        this.balanceAmount = balanceAmount;\n      });\n\n    return this.transactions;\n  }\n\n  updateTransaction = (transaction: Transaction) => {\n    var idx = this.getIndexofTransaction(transaction._id);\n    console.log(idx);\n    if (idx !== -1) {\n      this.transactions[idx] = transaction;\n      this.selectTransaction(transaction);\n    }\n\n    this.transactionService\n      .getBalanceAmount()\n      .then((balanceAmount: Number) => {\n        this.balanceAmount = balanceAmount;\n      });\n      \n    return this.transactions;\n  }\n\n}\n","<div class=\"col-md-12\" id=\"spacer\" style=\"margin: 80px 0;\">\n</div>\n<!-- <header class=\"bg-primary text-white\">\n  <div class=\"container text-center\">\n    <h1>Expense Manager</h1>\n    <p class=\"lead\">You can view, add, update and delete your expenses here.</p>\n  </div>\n</header> -->\n<div class=\"container\">\n  <div class=\"col-md-12\" id=\"spacer\" style=\"margin: 30px 0;\">\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"container\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h4 id=\"balanceAmount\" class=\"card-title\">{{balanceAmount}}</h4>\n                <h6 id=\"balanceText\" class=\"card-subtitle mb-2 text-muted\">Balance Amount</h6>\n                <!-- <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> -->\n                <div class=\"container\">\n                  Place for SVG for pie chart\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"container\">\n          <table class=\"table table-hover\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Category</th>\n                <th>Amount</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let transaction of transactions;\" (click)=\"selectTransaction(transaction)\"\n                [class.active]=\"transaction === selectedTransaction\">\n                <td>\n                  {{transaction.category}}\n                </td>\n                <td>\n                  {{transaction.amount}}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <button class=\"btn btn-warning\" (click)=\"createNewTransaction()\">New</button>\n        </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-5\">\n      <div class=\"container\">\n        <div class=\"row\">\n          <app-details-page [transaction]=\"selectedTransaction\" [createHandler]=\"addTransaction\" [updateHandler]=\"updateTransaction\"\n            [deleteHandler]=\"deleteTransaction\"></app-details-page>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-3\">\n      <app-category-list></app-category-list>\n    </div>\n\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Category } from './category';\nimport { HttpClient, HttpResponse } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryServiceService {\n\n  private categoryUrl = 'http://localhost:3000/api/category';\n\n  constructor(private http: HttpClient) { }\n\n  //Get All\n  getCategories(): Promise<void | Category[]> {\n    return this.http.get(this.categoryUrl)\n      .toPromise()\n      .then(response => response as Category[])\n      .catch(this.handleError);\n  }\n\n  //Get Single\n  getSingleCategory(categoryId: string): Promise<void | Category> {\n    return this.http.get(this.categoryUrl + '/' + categoryId)\n      .toPromise()\n      .then(response => response as Category)\n      .catch(this.handleError);\n  }\n\n  //Create\n  createCategory(newCategory: Category): Promise<void | Category> {\n    return this.http.post(this.categoryUrl, newCategory)\n      .toPromise()\n      .then(response => response as Category)\n      .catch(this.handleError);\n  }\n\n  //Delete\n  deleteCategory(categoryId: String): Promise<void | String> {\n    return this.http.delete(this.categoryUrl + '/' + categoryId)\n      .toPromise()\n      .then(response => response as String)\n      .catch(this.handleError);\n  }\n\n  updateCategory(putCategory: Category): Promise<void | Category> {\n    var putUrl = this.categoryUrl + '/' + putCategory._id;\n    return this.http.put(putUrl, putCategory)\n      .toPromise()\n      .then(response => response as Category)\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any) {\n    console.log(error);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { from } from 'rxjs';\nimport { Category } from '../category';\nimport { CategoryServiceService } from '../category-service.service';\n\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.css'],\n  providers: [CategoryServiceService]\n})\nexport class CategoryListComponent implements OnInit {\n\n  categories: Category[]\n  selectedCategory: Category\n\n  constructor(private categoryService: CategoryServiceService) { }\n\n  ngOnInit(): void {\n    this.categoryService\n      .getCategories()\n      .then((categories: Category[]) => {\n        this.categories = categories.map(category => {\n          return category;\n        });\n      });\n  }\n\n  private getIndexofCategory = (categoryId: String) => {\n    return this.categories.findIndex((category) => {\n      return category._id === categoryId;\n    });\n  }\n\n  selectCategory(category: Category) {\n    this.selectedCategory = category\n  }\n\n  createNewCategory() {\n    var category: Category = {\n      _id: '',\n      category: '',\n    };\n\n    this.selectCategory(category);\n\n  }\n\n  deleteCategory = (categoryId: String) => {\n    var idx = this.getIndexofCategory(categoryId);\n    if (idx !== -1) {\n      this.categories.splice(idx, 1);\n      this.selectCategory(null);\n    }\n    return this.categories;\n  }\n\n  addCategory = (category: Category) => {\n\n    if (category.category != '') {\n      this.categories.push(category);\n    }\n    this.selectCategory(category);\n    return this.categories;\n  }\n\n  updateCategory = (category: Category) => {\n    var idx = this.getIndexofCategory(category._id);\n    if (idx !== -1) {\n      this.categories[idx] = category;\n      this.selectCategory(category);\n    }\n    return this.categories;\n  }\n\n}\n\n\n// import { Component, OnInit } from '@angular/core';\n\n// @Component({\n//   selector: 'app-category-list',\n//   templateUrl: './category-list.component.html',\n//   styleUrls: ['./category-list.component.css'],\n//   providers: \n// })\n// export class CategoryListComponent implements OnInit {\n\n//   constructor() { }\n\n//   ngOnInit(): void {\n//   }\n\n// }\n","<div class=\"container\">\n    <table class=\"table table-hover\">\n        <thead>\n            <tr>\n                <th scope=\"col\">Category</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let category of categories;\" (click)=\"selectCategory(category)\"\n                [class.active]=\"category === selectedCategory\">\n                <td>\n                    {{category.category}}\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    <button class=\"btn btn-warning\" (click)=\"createNewCategory()\">New</button>\n</div>\n<div class=\"container\">\n    <div class=\"row\">\n        <app-category-details-page [category]=\"selectedCategory\" [createHandler]=\"addCategory\"\n            [updateHandler]=\"updateCategory\" [deleteHandler]=\"deleteCategory\"></app-category-details-page>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { from } from 'rxjs';\nimport { Transaction } from '../transaction';\nimport { TransactionServiceService } from '../transaction-service.service';\nimport { switchMap } from 'rxjs/operators';\nimport { ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-details-page',\n  templateUrl: './details-page.component.html',\n  styleUrls: ['./details-page.component.css'],\n  providers: [TransactionServiceService]\n})\nexport class DetailsPageComponent {\n\n  @Input()\n  transaction: Transaction;\n\n  @Input()\n  createHandler: Function;\n  @Input()\n  updateHandler: Function;\n  @Input()\n  deleteHandler: Function;\n\n  constructor(private transactionSerive: TransactionServiceService, private route: ActivatedRoute) { }\n\n  \n  createTransaction(transaction: Transaction) {\n    this.transactionSerive.createTransaction(transaction).then((newTransaction: Transaction) => {\n      this.createHandler(newTransaction);\n    });\n  }\n\n  updateTransaction(transaction: Transaction): void {\n    this.transactionSerive.updateTransaction(transaction).then((updatedTransaction: Transaction) => {\n      this.updateHandler(updatedTransaction);\n    });\n  }\n\n  deleteTransaction(transactionId: String): void {\n    this.transactionSerive.deleteTransaction(transactionId).then((deletedTransactionId: String) => {\n      this.deleteHandler(deletedTransactionId);\n    });\n  }\n\n}\n","<div *ngIf=\"transaction\" class=\"col-md-12\">\n  <h2 *ngIf=\"transaction._id\">transaction Details</h2>\n  <h2 *ngIf=\"!transaction._id\">Add New transaction</h2>\n</div>\n\n<form *ngIf=\"transaction\">\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-4\">\n      <label for=\"type\">Type</label>\n      <select [(ngModel)]=\"transaction.type\" class=\"form-control\" id=\"type\" name=\"type\" required=\"required\">\n        <option>income</option>\n        <option>expense</option>\n      </select>\n    </div>\n    <div class=\"form-group col-md-4\">\n      <label for=\"flacategoryvours\">Category</label>\n      <input [(ngModel)]=\"transaction.category\" class=\"form-control\" id=\"category\" name=\"category\" required=\"required\">\n    </div>\n    <div class=\"form-group col-md-4\">\n      <label for=\"date\">Date</label>\n      <input [(ngModel)]=\"transaction.date\" class=\"form-control\" id=\"date\" name=\"date\" required=\"required\">\n    </div>\n  </div>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-8\">\n      <label for=\"description\">Description</label>\n      <input [(ngModel)]=\"transaction.description\" class=\"form-control\" id=\"description\" name=\"description\"\n        required=\"required\">\n    </div>\n    <div class=\"form-group col-md-4\">\n      <label for=\"amount\">Amount</label>\n      <input [(ngModel)]=\"transaction.amount\" id=\"amount\" class=\"form-control\" name=\"amount\" required=\"required\">\n    </div>\n  </div>\n\n  <button class=\"btn btn-primary\" *ngIf=\"!transaction._id\" (click)=\"createTransaction(transaction)\">Create</button>\n  <button class=\"btn btn-info\" *ngIf=\"transaction._id\" (click)=\"updateTransaction(transaction)\">Update</button>\n  <button class=\"btn btn-danger\" *ngIf=\"transaction._id\" (click)=\"deleteTransaction(transaction._id)\">Delete</button>\n\n  <!-- <button type=\"submit\" class=\"btn btn-primary\">Create</button> -->\n</form>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\n//import { AppComponent } from './app.component';\nimport { HomeListComponent } from './home-list/home-list.component';\nimport { from } from 'rxjs';\nimport { AboutComponent } from './about/about.component';\n// import { HomepageComponent } from './homepage/homepage.component';\n// import { HeaderComponent } from './header/header.component';\nimport { FrameworkComponent } from './framework/framework.component';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n// import { CreateComponent } from './create/create.component';\nimport { DetailsPageComponent } from './details-page/details-page.component';\nimport { FormsModule } from '@angular/forms';\nimport { CategoryDetailsPageComponent } from './category-details-page/category-details-page.component';\nimport { CategoryListComponent } from './category-list/category-list.component';\n\n@NgModule({\n  declarations: [\n    //AppComponent,\n    HomeListComponent,\n    AboutComponent,\n    // HomepageComponent,\n    // HeaderComponent,\n    FrameworkComponent,\n    //CreateComponent,\n    DetailsPageComponent,\n    CategoryDetailsPageComponent,\n    CategoryListComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot([{\n      path: '',\n      component: HomeListComponent\n    },\n    {\n      path: 'about',\n      component: AboutComponent\n    },\n      // {\n      //   path: 'create',\n      //   component: CreateComponent\n      // },\n      // {\n      //   path: 'coffees/:coffeeid',\n      //   component: DetailsPageComponent\n      // }\n    ])\n  ],\n  //providers: [],\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }],\n  bootstrap: [FrameworkComponent],\n\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}